clear all
s = 3;
n = 1;
r = 1;
a = (0:3:360)';  
a = a*pi/180;
b = 0:0.1:2*pi;  

t1 = 0.1;
b1 = sqrt(2*n*t1);
L1 = sqrt((4*t1+r^2)/3);

R1 = zeros(numel(a), numel(b));

totalIterations = numel(a) * numel(b);

currentIteration = 0;
prevProgress = 0;

for i = 1:numel(a)
    for j = 1:numel(b)
        fun1 = @(k,u,c) ((k.^2).*exp(-1.5*k.^2)).*((u.^2).*(1-u.^2).*exp(-(b1.*u).^2).*(cos(s.*k.*u.*cos(a(i))/L1))).*(((cos(c)).^2).*(cos(k.*sqrt(1-u.^2).*(s*cos(b(j))*sin(a(i)).*cos(c)+s*sin(b(j)).*sin(a(i)).*sin(c))/(L1)))); 
        f31 = integral3(@(k,u,c)fun1(k,u,c),0,Inf,-1,1,0,2*pi);
        B1 = ((6*sqrt(6)*(b1^3))/(erf(b1)*(pi^2)))*(1-(3/(2*b1^2))*(1-((2*b1*exp(-b1^2))/(erf(b1)*sqrt(pi)))))^(-1);

        R1(i, j) = B1*f31;
        
        currentIteration = currentIteration + 1;
        progress = currentIteration / totalIterations;
        
        if progress - prevProgress >= 0.05 || progress == 1
            fprintf('Progress: %.0f%%\n', progress * 100);
            prevProgress = progress;
        end
    end
end

theta = repmat(a, 1, numel(b));
phi = repmat(b, numel(a), 1);  % Adjust phi to be the complement of b

x = R1.*sin(phi).*cos(theta);
y = R1.*sin(phi).*sin(theta);
z = R1.*cos(phi);

figure(4)
surf(x, y, z, 'EdgeColor', 'k')
xlabel('x')
ylabel('y')
zlabel('z')

view(120, 30)
axis equal
